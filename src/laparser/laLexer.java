// Generated from /mnt/hdd/NetBeansProjects/LaParser/src/grammar/la.g4 by ANTLR 4.1
package laparser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class laLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__60=1, T__59=2, T__58=3, T__57=4, T__56=5, T__55=6, T__54=7, T__53=8, 
		T__52=9, T__51=10, T__50=11, T__49=12, T__48=13, T__47=14, T__46=15, T__45=16, 
		T__44=17, T__43=18, T__42=19, T__41=20, T__40=21, T__39=22, T__38=23, 
		T__37=24, T__36=25, T__35=26, T__34=27, T__33=28, T__32=29, T__31=30, 
		T__30=31, T__29=32, T__28=33, T__27=34, T__26=35, T__25=36, T__24=37, 
		T__23=38, T__22=39, T__21=40, T__20=41, T__19=42, T__18=43, T__17=44, 
		T__16=45, T__15=46, T__14=47, T__13=48, T__12=49, T__11=50, T__10=51, 
		T__9=52, T__8=53, T__7=54, T__6=55, T__5=56, T__4=57, T__3=58, T__2=59, 
		T__1=60, T__0=61;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'&'", "'constante'", "'nao'", "'faca'", "'['", "'*'", "'tipo'", "'<'", 
		"'fim_procedimento'", "'<='", "'fim_enquanto'", "'ate'", "'inteiro'", 
		"'fim_registro'", "'para'", "'%'", "'enquanto'", "')'", "'senao'", "'='", 
		"'leia'", "'caso'", "'literal'", "'funcao'", "'fim_se'", "'escreva'", 
		"'..'", "'retorne'", "'fim_caso'", "'real'", "'fim_funcao'", "']'", "'fim_para'", 
		"'verdadeiro'", "','", "'-'", "'entao'", "':'", "'('", "'Îµ'", "'):'", 
		"'var'", "'se'", "'logico'", "'algoritmo'", "'<-'", "'fim_algoritmo'", 
		"'falso'", "'^'", "'.'", "'+'", "'ou'", "'<>'", "'e'", "'>'", "'registro'", 
		"'seja'", "'declare'", "'/'", "'>='", "'procedimento'"
	};
	public static final String[] ruleNames = {
		"T__60", "T__59", "T__58", "T__57", "T__56", "T__55", "T__54", "T__53", 
		"T__52", "T__51", "T__50", "T__49", "T__48", "T__47", "T__46", "T__45", 
		"T__44", "T__43", "T__42", "T__41", "T__40", "T__39", "T__38", "T__37", 
		"T__36", "T__35", "T__34", "T__33", "T__32", "T__31", "T__30", "T__29", 
		"T__28", "T__27", "T__26", "T__25", "T__24", "T__23", "T__22", "T__21", 
		"T__20", "T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", 
		"T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", 
		"T__3", "T__2", "T__1", "T__0"
	};


	public laLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "la.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2?\u01cd\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4"+
		"\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\n\3"+
		"\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3"+
		"\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3"+
		"\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17"+
		"\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21"+
		"\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\24\3\24"+
		"\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27"+
		"\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33"+
		"\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35"+
		"\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37"+
		"\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3"+
		"\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3%\3%\3&\3&\3&\3&\3"+
		"&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3*\3+\3+\3+\3+\3,\3,\3,\3-\3-\3-\3-\3-"+
		"\3-\3-\3.\3.\3.\3.\3.\3.\3.\3.\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\60\3\60"+
		"\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61"+
		"\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\65\3\66\3\66\3\66\3\67"+
		"\3\67\38\38\39\39\39\39\39\39\39\39\39\3:\3:\3:\3:\3:\3;\3;\3;\3;\3;\3"+
		";\3;\3;\3<\3<\3=\3=\3=\3>\3>\3>\3>\3>\3>\3>\3>\3>\3>\3>\3>\3>\2?\3\3\1"+
		"\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31"+
		"\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30"+
		"\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\"\1C#\1"+
		"E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1Y.\1[/\1]\60\1_\61\1a\62\1c\63"+
		"\1e\64\1g\65\1i\66\1k\67\1m8\1o9\1q:\1s;\1u<\1w=\1y>\1{?\1\3\2\2\u01cc"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2"+
		"\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2"+
		"U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3"+
		"\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2"+
		"\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2"+
		"{\3\2\2\2\3}\3\2\2\2\5\177\3\2\2\2\7\u0089\3\2\2\2\t\u008d\3\2\2\2\13"+
		"\u0092\3\2\2\2\r\u0094\3\2\2\2\17\u0096\3\2\2\2\21\u009b\3\2\2\2\23\u009d"+
		"\3\2\2\2\25\u00ae\3\2\2\2\27\u00b1\3\2\2\2\31\u00be\3\2\2\2\33\u00c2\3"+
		"\2\2\2\35\u00ca\3\2\2\2\37\u00d7\3\2\2\2!\u00dc\3\2\2\2#\u00de\3\2\2\2"+
		"%\u00e7\3\2\2\2\'\u00e9\3\2\2\2)\u00ef\3\2\2\2+\u00f1\3\2\2\2-\u00f6\3"+
		"\2\2\2/\u00fb\3\2\2\2\61\u0103\3\2\2\2\63\u010a\3\2\2\2\65\u0111\3\2\2"+
		"\2\67\u0119\3\2\2\29\u011c\3\2\2\2;\u0124\3\2\2\2=\u012d\3\2\2\2?\u0132"+
		"\3\2\2\2A\u013d\3\2\2\2C\u013f\3\2\2\2E\u0148\3\2\2\2G\u0153\3\2\2\2I"+
		"\u0155\3\2\2\2K\u0157\3\2\2\2M\u015d\3\2\2\2O\u015f\3\2\2\2Q\u0161\3\2"+
		"\2\2S\u0163\3\2\2\2U\u0166\3\2\2\2W\u016a\3\2\2\2Y\u016d\3\2\2\2[\u0174"+
		"\3\2\2\2]\u017e\3\2\2\2_\u0181\3\2\2\2a\u018f\3\2\2\2c\u0195\3\2\2\2e"+
		"\u0197\3\2\2\2g\u0199\3\2\2\2i\u019b\3\2\2\2k\u019e\3\2\2\2m\u01a1\3\2"+
		"\2\2o\u01a3\3\2\2\2q\u01a5\3\2\2\2s\u01ae\3\2\2\2u\u01b3\3\2\2\2w\u01bb"+
		"\3\2\2\2y\u01bd\3\2\2\2{\u01c0\3\2\2\2}~\7(\2\2~\4\3\2\2\2\177\u0080\7"+
		"e\2\2\u0080\u0081\7q\2\2\u0081\u0082\7p\2\2\u0082\u0083\7u\2\2\u0083\u0084"+
		"\7v\2\2\u0084\u0085\7c\2\2\u0085\u0086\7p\2\2\u0086\u0087\7v\2\2\u0087"+
		"\u0088\7g\2\2\u0088\6\3\2\2\2\u0089\u008a\7p\2\2\u008a\u008b\7c\2\2\u008b"+
		"\u008c\7q\2\2\u008c\b\3\2\2\2\u008d\u008e\7h\2\2\u008e\u008f\7c\2\2\u008f"+
		"\u0090\7e\2\2\u0090\u0091\7c\2\2\u0091\n\3\2\2\2\u0092\u0093\7]\2\2\u0093"+
		"\f\3\2\2\2\u0094\u0095\7,\2\2\u0095\16\3\2\2\2\u0096\u0097\7v\2\2\u0097"+
		"\u0098\7k\2\2\u0098\u0099\7r\2\2\u0099\u009a\7q\2\2\u009a\20\3\2\2\2\u009b"+
		"\u009c\7>\2\2\u009c\22\3\2\2\2\u009d\u009e\7h\2\2\u009e\u009f\7k\2\2\u009f"+
		"\u00a0\7o\2\2\u00a0\u00a1\7a\2\2\u00a1\u00a2\7r\2\2\u00a2\u00a3\7t\2\2"+
		"\u00a3\u00a4\7q\2\2\u00a4\u00a5\7e\2\2\u00a5\u00a6\7g\2\2\u00a6\u00a7"+
		"\7f\2\2\u00a7\u00a8\7k\2\2\u00a8\u00a9\7o\2\2\u00a9\u00aa\7g\2\2\u00aa"+
		"\u00ab\7p\2\2\u00ab\u00ac\7v\2\2\u00ac\u00ad\7q\2\2\u00ad\24\3\2\2\2\u00ae"+
		"\u00af\7>\2\2\u00af\u00b0\7?\2\2\u00b0\26\3\2\2\2\u00b1\u00b2\7h\2\2\u00b2"+
		"\u00b3\7k\2\2\u00b3\u00b4\7o\2\2\u00b4\u00b5\7a\2\2\u00b5\u00b6\7g\2\2"+
		"\u00b6\u00b7\7p\2\2\u00b7\u00b8\7s\2\2\u00b8\u00b9\7w\2\2\u00b9\u00ba"+
		"\7c\2\2\u00ba\u00bb\7p\2\2\u00bb\u00bc\7v\2\2\u00bc\u00bd\7q\2\2\u00bd"+
		"\30\3\2\2\2\u00be\u00bf\7c\2\2\u00bf\u00c0\7v\2\2\u00c0\u00c1\7g\2\2\u00c1"+
		"\32\3\2\2\2\u00c2\u00c3\7k\2\2\u00c3\u00c4\7p\2\2\u00c4\u00c5\7v\2\2\u00c5"+
		"\u00c6\7g\2\2\u00c6\u00c7\7k\2\2\u00c7\u00c8\7t\2\2\u00c8\u00c9\7q\2\2"+
		"\u00c9\34\3\2\2\2\u00ca\u00cb\7h\2\2\u00cb\u00cc\7k\2\2\u00cc\u00cd\7"+
		"o\2\2\u00cd\u00ce\7a\2\2\u00ce\u00cf\7t\2\2\u00cf\u00d0\7g\2\2\u00d0\u00d1"+
		"\7i\2\2\u00d1\u00d2\7k\2\2\u00d2\u00d3\7u\2\2\u00d3\u00d4\7v\2\2\u00d4"+
		"\u00d5\7t\2\2\u00d5\u00d6\7q\2\2\u00d6\36\3\2\2\2\u00d7\u00d8\7r\2\2\u00d8"+
		"\u00d9\7c\2\2\u00d9\u00da\7t\2\2\u00da\u00db\7c\2\2\u00db \3\2\2\2\u00dc"+
		"\u00dd\7\'\2\2\u00dd\"\3\2\2\2\u00de\u00df\7g\2\2\u00df\u00e0\7p\2\2\u00e0"+
		"\u00e1\7s\2\2\u00e1\u00e2\7w\2\2\u00e2\u00e3\7c\2\2\u00e3\u00e4\7p\2\2"+
		"\u00e4\u00e5\7v\2\2\u00e5\u00e6\7q\2\2\u00e6$\3\2\2\2\u00e7\u00e8\7+\2"+
		"\2\u00e8&\3\2\2\2\u00e9\u00ea\7u\2\2\u00ea\u00eb\7g\2\2\u00eb\u00ec\7"+
		"p\2\2\u00ec\u00ed\7c\2\2\u00ed\u00ee\7q\2\2\u00ee(\3\2\2\2\u00ef\u00f0"+
		"\7?\2\2\u00f0*\3\2\2\2\u00f1\u00f2\7n\2\2\u00f2\u00f3\7g\2\2\u00f3\u00f4"+
		"\7k\2\2\u00f4\u00f5\7c\2\2\u00f5,\3\2\2\2\u00f6\u00f7\7e\2\2\u00f7\u00f8"+
		"\7c\2\2\u00f8\u00f9\7u\2\2\u00f9\u00fa\7q\2\2\u00fa.\3\2\2\2\u00fb\u00fc"+
		"\7n\2\2\u00fc\u00fd\7k\2\2\u00fd\u00fe\7v\2\2\u00fe\u00ff\7g\2\2\u00ff"+
		"\u0100\7t\2\2\u0100\u0101\7c\2\2\u0101\u0102\7n\2\2\u0102\60\3\2\2\2\u0103"+
		"\u0104\7h\2\2\u0104\u0105\7w\2\2\u0105\u0106\7p\2\2\u0106\u0107\7e\2\2"+
		"\u0107\u0108\7c\2\2\u0108\u0109\7q\2\2\u0109\62\3\2\2\2\u010a\u010b\7"+
		"h\2\2\u010b\u010c\7k\2\2\u010c\u010d\7o\2\2\u010d\u010e\7a\2\2\u010e\u010f"+
		"\7u\2\2\u010f\u0110\7g\2\2\u0110\64\3\2\2\2\u0111\u0112\7g\2\2\u0112\u0113"+
		"\7u\2\2\u0113\u0114\7e\2\2\u0114\u0115\7t\2\2\u0115\u0116\7g\2\2\u0116"+
		"\u0117\7x\2\2\u0117\u0118\7c\2\2\u0118\66\3\2\2\2\u0119\u011a\7\60\2\2"+
		"\u011a\u011b\7\60\2\2\u011b8\3\2\2\2\u011c\u011d\7t\2\2\u011d\u011e\7"+
		"g\2\2\u011e\u011f\7v\2\2\u011f\u0120\7q\2\2\u0120\u0121\7t\2\2\u0121\u0122"+
		"\7p\2\2\u0122\u0123\7g\2\2\u0123:\3\2\2\2\u0124\u0125\7h\2\2\u0125\u0126"+
		"\7k\2\2\u0126\u0127\7o\2\2\u0127\u0128\7a\2\2\u0128\u0129\7e\2\2\u0129"+
		"\u012a\7c\2\2\u012a\u012b\7u\2\2\u012b\u012c\7q\2\2\u012c<\3\2\2\2\u012d"+
		"\u012e\7t\2\2\u012e\u012f\7g\2\2\u012f\u0130\7c\2\2\u0130\u0131\7n\2\2"+
		"\u0131>\3\2\2\2\u0132\u0133\7h\2\2\u0133\u0134\7k\2\2\u0134\u0135\7o\2"+
		"\2\u0135\u0136\7a\2\2\u0136\u0137\7h\2\2\u0137\u0138\7w\2\2\u0138\u0139"+
		"\7p\2\2\u0139\u013a\7e\2\2\u013a\u013b\7c\2\2\u013b\u013c\7q\2\2\u013c"+
		"@\3\2\2\2\u013d\u013e\7_\2\2\u013eB\3\2\2\2\u013f\u0140\7h\2\2\u0140\u0141"+
		"\7k\2\2\u0141\u0142\7o\2\2\u0142\u0143\7a\2\2\u0143\u0144\7r\2\2\u0144"+
		"\u0145\7c\2\2\u0145\u0146\7t\2\2\u0146\u0147\7c\2\2\u0147D\3\2\2\2\u0148"+
		"\u0149\7x\2\2\u0149\u014a\7g\2\2\u014a\u014b\7t\2\2\u014b\u014c\7f\2\2"+
		"\u014c\u014d\7c\2\2\u014d\u014e\7f\2\2\u014e\u014f\7g\2\2\u014f\u0150"+
		"\7k\2\2\u0150\u0151\7t\2\2\u0151\u0152\7q\2\2\u0152F\3\2\2\2\u0153\u0154"+
		"\7.\2\2\u0154H\3\2\2\2\u0155\u0156\7/\2\2\u0156J\3\2\2\2\u0157\u0158\7"+
		"g\2\2\u0158\u0159\7p\2\2\u0159\u015a\7v\2\2\u015a\u015b\7c\2\2\u015b\u015c"+
		"\7q\2\2\u015cL\3\2\2\2\u015d\u015e\7<\2\2\u015eN\3\2\2\2\u015f\u0160\7"+
		"*\2\2\u0160P\3\2\2\2\u0161\u0162\7\u03b7\2\2\u0162R\3\2\2\2\u0163\u0164"+
		"\7+\2\2\u0164\u0165\7<\2\2\u0165T\3\2\2\2\u0166\u0167\7x\2\2\u0167\u0168"+
		"\7c\2\2\u0168\u0169\7t\2\2\u0169V\3\2\2\2\u016a\u016b\7u\2\2\u016b\u016c"+
		"\7g\2\2\u016cX\3\2\2\2\u016d\u016e\7n\2\2\u016e\u016f\7q\2\2\u016f\u0170"+
		"\7i\2\2\u0170\u0171\7k\2\2\u0171\u0172\7e\2\2\u0172\u0173\7q\2\2\u0173"+
		"Z\3\2\2\2\u0174\u0175\7c\2\2\u0175\u0176\7n\2\2\u0176\u0177\7i\2\2\u0177"+
		"\u0178\7q\2\2\u0178\u0179\7t\2\2\u0179\u017a\7k\2\2\u017a\u017b\7v\2\2"+
		"\u017b\u017c\7o\2\2\u017c\u017d\7q\2\2\u017d\\\3\2\2\2\u017e\u017f\7>"+
		"\2\2\u017f\u0180\7/\2\2\u0180^\3\2\2\2\u0181\u0182\7h\2\2\u0182\u0183"+
		"\7k\2\2\u0183\u0184\7o\2\2\u0184\u0185\7a\2\2\u0185\u0186\7c\2\2\u0186"+
		"\u0187\7n\2\2\u0187\u0188\7i\2\2\u0188\u0189\7q\2\2\u0189\u018a\7t\2\2"+
		"\u018a\u018b\7k\2\2\u018b\u018c\7v\2\2\u018c\u018d\7o\2\2\u018d\u018e"+
		"\7q\2\2\u018e`\3\2\2\2\u018f\u0190\7h\2\2\u0190\u0191\7c\2\2\u0191\u0192"+
		"\7n\2\2\u0192\u0193\7u\2\2\u0193\u0194\7q\2\2\u0194b\3\2\2\2\u0195\u0196"+
		"\7`\2\2\u0196d\3\2\2\2\u0197\u0198\7\60\2\2\u0198f\3\2\2\2\u0199\u019a"+
		"\7-\2\2\u019ah\3\2\2\2\u019b\u019c\7q\2\2\u019c\u019d\7w\2\2\u019dj\3"+
		"\2\2\2\u019e\u019f\7>\2\2\u019f\u01a0\7@\2\2\u01a0l\3\2\2\2\u01a1\u01a2"+
		"\7g\2\2\u01a2n\3\2\2\2\u01a3\u01a4\7@\2\2\u01a4p\3\2\2\2\u01a5\u01a6\7"+
		"t\2\2\u01a6\u01a7\7g\2\2\u01a7\u01a8\7i\2\2\u01a8\u01a9\7k\2\2\u01a9\u01aa"+
		"\7u\2\2\u01aa\u01ab\7v\2\2\u01ab\u01ac\7t\2\2\u01ac\u01ad\7q\2\2\u01ad"+
		"r\3\2\2\2\u01ae\u01af\7u\2\2\u01af\u01b0\7g\2\2\u01b0\u01b1\7l\2\2\u01b1"+
		"\u01b2\7c\2\2\u01b2t\3\2\2\2\u01b3\u01b4\7f\2\2\u01b4\u01b5\7g\2\2\u01b5"+
		"\u01b6\7e\2\2\u01b6\u01b7\7n\2\2\u01b7\u01b8\7c\2\2\u01b8\u01b9\7t\2\2"+
		"\u01b9\u01ba\7g\2\2\u01bav\3\2\2\2\u01bb\u01bc\7\61\2\2\u01bcx\3\2\2\2"+
		"\u01bd\u01be\7@\2\2\u01be\u01bf\7?\2\2\u01bfz\3\2\2\2\u01c0\u01c1\7r\2"+
		"\2\u01c1\u01c2\7t\2\2\u01c2\u01c3\7q\2\2\u01c3\u01c4\7e\2\2\u01c4\u01c5"+
		"\7g\2\2\u01c5\u01c6\7f\2\2\u01c6\u01c7\7k\2\2\u01c7\u01c8\7o\2\2\u01c8"+
		"\u01c9\7g\2\2\u01c9\u01ca\7p\2\2\u01ca\u01cb\7v\2\2\u01cb\u01cc\7q\2\2"+
		"\u01cc|\3\2\2\2\3\2";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}